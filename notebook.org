#+TITLE: IIR Hardware Notebook

* Wednesday, 1/11/17
	Start: 2:00PM

	I started actually creating the VHDL file. I started by just placing the
	things that I believed needed to be there. The entity and architecture were
	built kinda.

	End: 5:00PM

	Start: 7:45PM

	I found a [[https://github.com/tgingold/ghdl][program]] that will simulate VHDL. My entire design is screwed up!

	I basically worked out most of the kinks /except/ the arrays aren't happy.

	End: 8:50 PM

* Thursday, 1/12/17
	Start: 7:45PM

	Attempting to fix these arrays...

	I fixed the arrays... They're even worse than I thought! Damn you VHDL... Damn
	you.

	Anyways, I'm ready to test my FIR design. Vivado! Oh Vivado, where art thou
	Vivado!?

	*IMPORTANT NOTE: GHDL seems to think certain pieces of "code" are incorrect*
  *when they seem perfectly fine. As of now, I'm assuming GHDL is making*
  *mistakes and will test it out in Vivado someday.*

	End: 8:37PM
* Friday, 1/13/17
	Start: 3:00PM

	I began working with Vivado to hopefully see if my FIR was working.

	Problem: I had many issues that were present. Such was declaring variables in
	the wrong part of the design. They /must/ go in a process /before/ the `begin'
	statement. Also, I had an issue with Vivado in general. I couldn't get the ILA
	working very well.

	I've decided to just go in and try it with actual voltages.

	Issues: There are a handful of issues that I will need to take care of before
	I can even do anything with the XADC.
	- I will need a GPIO to output the correct channel to the IP.
	- I need to get the IP to actually build.
	- Pain and suffering.

  End: 5:16PM

* Sunday, 1/15/17
	Start: 3:45PM

	I started out by editing a past project so that the Zynq processor will
	automatically reroute the ADC value to the newly created FIR IP. There are
	some issues that I'm running into, however.
	Issues:
	- Bitstream of the IP won't generate due to timing issues.
	- The timing of both the IP and the entire project may be off because of the
    following:
		- Timing failures of IP
		- Bad timing having to do the calculation and start the DA2 etc.

	*NOTE: IF I WISH TO DO JUST HARDWARE, I NEED A NEW FSM.*
	- However, the Zynq stuff worked, but I forgot to add the offset.

	*UPDATE: Instead of trying to do the /just/ hardware, I will use the Zynq as*
	*a rerouting device for the XADC values. This will allow me to not have to*
	*worry /too/ much about the timing parts.*

	After adding in the offset, I got a running average FIR working! (coeff values
	all set to 0x1999)

	Let us try another FIR filter and see how it works. (with internal coeffs to
	the IP).

	*I can't seem to get another FIR to work yet.*

	End: 6:23PM

* Monday, 1/16/17
	Start: 12:42PM

	I will attempt, once again, to get FIR working. I'll start by making sure the
	coeffs that I got from MATLAB are correct and do the right filter. (excel)

	- [X] Verified! The coeffs are correct.
	- [ ] FIR working

	I'm not getting anywhere and it's almost 3... I'm going to create a FSM inside
	the thing to hopefully help timing related issues that may be problematic.

	Well another waste of 3 hours.

	End: 3:29PM
* Tuesday, 1/17/17
	Start: 12:45PM

	I started to remake the entire project because you can't downgrade to an older
	version of Vivado...

	End: 1:45PM

	Start: 3:30PM

	Finished up making the new design. I also used a new and improved IP that
	contained an internal FSM.

	It works with the averager! (with 0x1999 as the all 5 coeffs)

	*Solved: Instead of grabbing 11 downto 0 of the big_output, I took 20*
	*downto 9.*

	I'm getting stuff out for a real FIR, however, it doesn't seem to be working
	correctly. What I mean is that the FIR functionality isn't there. I get the
	correct output frequency but the amplitude doesn't ever cutoff.

	End: 5:30PM

	Start: 8:15PM

	Time to revisit this FIR not functioning correctly issue. I believe it has
	something to do with the way that I'm doing the calculation. Thus, I am using
	a for loop to do the calculation, much like how we would do it in C.
	- My reasoning for this is because of pipelining. Pipelining will allow for
    higher frequencies. Although I'm not really pipelining for /real/, I'm doing
    something that will isolation the operations more.

	If this /isn't/ the issue, I'll have to blame it on the coeffs.

	*FAILURE: Using the for loop did NOT fix the issue.*

	I'm going to increase the number of bits of the coeffs. I doubt this will fix
	the issue, but it's worth a shot!

	If this that isn't the issue then I'm not sure what the problem is... :(

	It's not the issue :(((((( help

	Call police, PETA, CPS, amberlamps! ANYONE!

	Slice range from big_output:
	27-16: No change in amplitude
	26-15: No change in amplitude
	25-14: No change in amplitude
	24-13: No change in amplitude
	23-12: Too much voltage, but not clipping. No change in amplitude.
	22-11: Clipping and hideous. Not a feasible output.
	...
	20-9: No feasible output

	*I am unsure as to what the issue is at this point*

	*Problem: No change in amplitude. Even when output should be in cutoff.*
	- I am getting the correct frequencies out.
	- The outputs aren't beautiful, however, they are quite nice. (curviture)

	Possible reasons:
	- Overflowing of big_output variable? NOT THIS ONE (VERIFIED)
	- big_output not being signed?
	- try shifting instead of just slicing big_output?

	End: 10:54PM
* Wednesday, 1/18/17
	I spent some time today (about 1 hour) looking at a FIR design
	written in VHDL. It gave me a lot of insight and I have some ideas
	to fix the issues that I'm having.
* Thursday, 1/19/17
	Start: 12:45PM

	I'm starting off by changing the types of the signals and variables
	in the design.
	- The ins/outs are still /std_logic_vector/ but the data is converted
    into /signed/ and the calculations are completed in the type of
    /signed/. NOTE: Both big_output and the coeffs are now signed as
    well.

	Changing them to signed didn't work.

	End: 1:45PM

	Start: 3:30PM

	More troubleshooting.

	None of the things that I thought would fix the issue worked.

	I guess I'll have to redesign the entire IP to try and fix this
	issue.
* Friday, 1/20/17
	Start: 6:00PM

	We are going to try a new RTL design with a 4 tap summing averager.

	I can't see to get the done signal working with the RTL design, thus, I am
	going to edit my existing design to use the pipelining features found in the
	RTL design. I swear that if this doesn't work, I will cry tears of soy. If it
	does work, I'll cry tears of joy.

	Once again, nothing is working. This project sucks. If only we were acutally
	taught VHDL...

	Another waste of time.

	End: 9:03PM
* Sunday, 1/22/17
	Start: 2:18PM

	Here again.

	I've been trying stuff for about 2 hours and I can't seem to get the done
	signal to go high :(

	What the hell man. What did I do to deserve this!!!!!

	Note:
	While attempting to fix the `done' issues, I figured something out. I used a
	counter as a buffer because the eoc_out signal is very very fast (only 1 cycle
	high). As a direct result, I noticed (on the ILA) that even though the newly
	delayed eoc_out signal was on for a very very long time, the IP was still not
	recognizing the clock. This made me believe that for some reason the signal
	was being read in incorrectly. Well, this isn't the case either. While
	thinking of possible issues that may have been causing this issue I decided
	that maybe, for some reason, the IP couldn't get the rising edge of the
	delayed eoc_out signal, thus, I removed `rising_edge' logic and replaced it
	with the simple: "i_clk='1'". To my surprised, Vivado gave me some new
	warnings about certain signals that were read in (the processes) but not found
	in the sensitivity list. Interestingly enough, Vivado didn't complain about
	them not being on the sensitivity list before I changed the clocking
	logic. Another trait of these signals is that all of which that were warned
	were found in processes within the logic for the /rising_edge/ of the
	clock. I'm wondering if this is what is causing my `done' issues. We shall
	see.

	After testing this theory, I was at a loss of words because it didn't help the
	issue at all. It seems like the IP isn't responding to the clock at all. I'm
	going to try switching the IP from RTL to Behavioral. I doubt this means
	anything but I'm going to test it. If it doesn't do anything, I'm going to go
	to my project that has a working done signal and attempt to make the necessary
	changes.


	*WHELP FOUND OUT WHAT ONE (1) OF THE PROBLEMS IS..... THE RESET LOGIC WAS SET*
	*FOR WHEN THE RESET BUTTON WAS LOW.... BUTTONS ARE LOW BY DEFAULT.... BECAUSE*
	*OF THAT NOTHING COULD BE COMPLETED. LIFE'S BLEAK.*

	Alright, kids here we go:
	After noticing the reset issue, I tried it and... IT WORKED. The summing
	average worked! 4 coeffs at 0.2 worked. I decided then to change things that
	maybe wouldn't have to be there and well... It broke. After fixing it again I
	realized how to get it working. Turns out, the new data and inputting of the
	coeffs (found in process p_input) must be done at the /rising_edge/ of the
	clock but the rest can be done whenever the clock is high. I found that this
	works best. After realizing this issue, I attempted to try a 3rd order lowpass
	filter and that worked as well. See the pictures found in the `FIR' directory
	of this repo.

	NOTE: The coeffs I used for the lowpass filter are: '(0.2119 0.4718 0.4718
	0.2119).

	NOTE: The filter doesn't work 100% perfect. It is supposed to fully cutoff at
	35kHz but mine cuts off at about 20kHz. I don't think this is a huge deal
	mostly becuase we are talking about a 3rd order filter, which wouldn't be very
	accurate anyways.

	End: 7:28PM (I stayed a little later to work on logic for the Zynq part)
* Monday, 1/23/17
	Start: 1:03PM

	I'm going to test another FIR filter. This time a high pass.

	The high pass coeffs are: '(.013735766 -.688 .687646095 -.013735766)
	It works! Check out the `fir-highpass' image found in the `fir' directory.

	Very quickly I am going to see if I can get a better amplitude out but
	shifting the sliced bits in the IP.

	I got a very nice output!

	However, while attempting to create an IIR IP, Vivado decided to delete the
	source file... Now I have to recreate it...

	The IIR filter will be a 3rd order highpass filter that should cutoff at 10k.
	The coeffs are (in single section form):
	a = '(1 -1.76 1.18289 -.27805)
	b = '(.527624 -1.58287 1.58287 -.527624)

	Seems like the IIR is giving me shit. A lot of it too. Seems like the ouput is
	too large, this may be because of the addition between the feedforward and
	feedback. We shall see.

	Turns out that I'm not getting anything out of the DA, we shall look into this
	later.

	I got my weekly meetnig checked off.

	End: 3:50PM
