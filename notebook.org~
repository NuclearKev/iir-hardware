#+TITLE: IIR Hardware Notebook

* Wednesday, 1/11/17
	Start: 2:00PM

	I started actually creating the VHDL file. I started by just placing the
	things that I believed needed to be there. The entity and architecture were
	built kinda.

	End: 5:00PM

	Start: 7:45PM

	I found a [[https://github.com/tgingold/ghdl][program]] that will simulate VHDL. My entire design is screwed up!

	I basically worked out most of the kinks /except/ the arrays aren't happy.

	End: 8:50 PM

* Thursday, 1/12/17
	Start: 7:45PM

	Attempting to fix these arrays...

	I fixed the arrays... They're even worse than I thought! Damn you VHDL... Damn
	you.

	Anyways, I'm ready to test my FIR design. Vivado! Oh Vivado, where art thou
	Vivado!?

	*IMPORTANT NOTE: GHDL seems to think certain pieces of "code" are incorrect*
  *when they seem perfectly fine. As of now, I'm assuming GHDL is making*
  *mistakes and will test it out in Vivado someday.*

	End: 8:37PM
* Friday, 1/13/17
	Start: 3:00PM

	I began working with Vivado to hopefully see if my FIR was working.

	Problem: I had many issues that were present. Such was declaring variables in
	the wrong part of the design. They /must/ go in a process /before/ the `begin'
	statement. Also, I had an issue with Vivado in general. I couldn't get the ILA
	working very well.

	I've decided to just go in and try it with actual voltages.

	Issues: There are a handful of issues that I will need to take care of before
	I can even do anything with the XADC.
	- I will need a GPIO to output the correct channel to the IP.
	- I need to get the IP to actually build.
	- Pain and suffering.

  End: 5:16PM

* Sunday, 1/15/17
	Start: 3:45PM

	I started out by editing a past project so that the Zynq processor will
	automatically reroute the ADC value to the newly created FIR IP. There are
	some issues that I'm running into, however.
	Issues:
	- Bitstream of the IP won't generate due to timing issues.
	- The timing of both the IP and the entire project may be off because of the
    following:
		- Timing failures of IP
		- Bad timing having to do the calculation and start the DA2 etc.

	*NOTE: IF I WISH TO DO JUST HARDWARE, I NEED A NEW FSM.*
	- However, the Zynq stuff worked, but I forgot to add the offset.

	*UPDATE: Instead of trying to do the /just/ hardware, I will use the Zynq as*
	*a rerouting device for the XADC values. This will allow me to not have to*
	*worry /too/ much about the timing parts.*

	After adding in the offset, I got a running average FIR working! (coeff values
	all set to 0x1999)

	Let us try another FIR filter and see how it works. (with internal coeffs to
	the IP).

	*I can't seem to get another FIR to work yet.*

	End: 6:23PM

* Monday, 1/16/17
	Start: 12:42PM

	I will attempt, once again, to get FIR working. I'll start by making sure the
	coeffs that I got from MATLAB are correct and do the right filter. (excel)

	- [X] Verified! The coeffs are correct.
	- [ ] FIR working

	I'm not getting anywhere and it's almost 3... I'm going to create a FSM inside
	the thing to hopefully help timing related issues that may be problematic.

	Well another waste of 3 hours.

	End: 3:29PM
* Tuesday, 1/17/17
	Start: 12:45PM

	I started to remake the entire project because you can't downgrade to an older
	version of Vivado...

	End: 1:45PM

	Start: 3:30PM

	Finished up making the new design. I also used a new and improved IP that
	contained an internal FSM.

	It works with the averager! (with 0x1999 as the all 5 coeffs)

	*Solved: Instead of grabbing 11 downto 0 of the big_output, I took 20*
	*downto 9.*

	I'm getting stuff out for a real FIR, however, it doesn't seem to be working
	correctly. What I mean is that the FIR functionality isn't there. I get the
	correct output frequency but the amplitude doesn't ever cutoff.

	End: 5:30PM

	Start: 8:15PM

	Time to revisit this FIR not functioning correctly issue. I believe it has
	something to do with the way that I'm doing the calculation. Thus, I am using
	a for loop to do the calculation, much like how we would do it in C.
	- My reasoning for this is because of pipelining. Pipelining will allow for
    higher frequencies. Although I'm not really pipelining for /real/, I'm doing
    something that will isolation the operations more.

	If this /isn't/ the issue, I'll have to blame it on the coeffs.

	*FAILURE: Using the for loop did NOT fix the issue.*

	I'm going to increase the number of bits of the coeffs. I doubt this will fix
	the issue, but it's worth a shot!

	If this that isn't the issue then I'm not sure what the problem is... :(

	It's not the issue :(((((( help

	Call police, PETA, CPS, amberlamps! ANYONE!

	Slice range from big_output:
	27-16: No change in amplitude
	26-15: No change in amplitude
	25-14: No change in amplitude
	24-13: No change in amplitude
	23-12: Too much voltage, but not clipping. No change in amplitude.
	22-11: Clipping and hideous. Not a feasible output.
	...
	20-9: No feasible output

	*I am unsure as to what the issue is at this point*

	*Problem: No change in amplitude. Even when output should be in cutoff.*
	- I am getting the correct frequencies out.
	- The outputs aren't beautiful, however, they are quite nice. (curviture)

	Possible reasons:
	- Overflowing of big_output variable? NOT THIS ONE (VERIFIED)
	- big_output not being signed?
	- try shifting instead of just slicing big_output?

	End: 10:54PM
